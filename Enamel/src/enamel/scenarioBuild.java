package enamel;

import java.awt.AWTEvent;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.File;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author kyleh
 */
public class scenarioBuild extends javax.swing.JFrame implements ActionListener {

	private starter start;
	private File file;
	private Editor editor;
	private int buttons,cells;
	private JFileChooser chooser;
	

	public scenarioBuild(starter start, String cells, String buttons) {
		this.start = start;
		this.file = start.getFile();

		enableFile(this.file);
		initComponents();
		initCellAndButt(cells, buttons);
		setButtons(Integer.parseInt(start.getButt()));
		setCells(Integer.parseInt(start.getCell()));
	}

	

	public scenarioBuild(String filePath) {
		File newFile = new File(filePath);
		enableFile(newFile);
		initComponents();
		fillList();
	}

	

	private void fillList() {
		for (int i = 0; i < editor.getSize(); i++) {
			model.addElement(editor.getElement(i));
		}
	}

	private void initCellAndButt(String cells, String buttons) {
		model.addElement("Cells: " + cells);
		editor.add("Cells " + cells);
		model.addElement("Buttons: " + buttons);
		editor.add("Buttons " + buttons);
		setButtons(Integer.parseInt(buttons));
	}

	private void enableFile(File newFile) {
		
		editor = new Editor(newFile);
		// System.out.println("Editor was made");

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		bg = new javax.swing.JPanel();
		listHolder = new javax.swing.JPanel();
		displayP = new javax.swing.JScrollPane();
		display = new javax.swing.JList<>(model);
		actionButHolder = new javax.swing.JPanel();
		editB = new javax.swing.JButton();
		deleteB = new javax.swing.JButton();
		exitBHolder = new javax.swing.JPanel();
		saveB = new javax.swing.JButton();
		testB = new javax.swing.JButton();
		exitB = new javax.swing.JButton();
		questionBuild = new javax.swing.JPanel();
		qBuildL = new javax.swing.JLabel();
		questionTxtP = new javax.swing.JScrollPane();
		questionTxt = new javax.swing.JTextArea();
		questionL = new javax.swing.JLabel();
		displayL = new javax.swing.JLabel();
		displayS = new javax.swing.JTextField();
		buttonL = new javax.swing.JLabel();
		correctButton = new javax.swing.JComboBox<>();
		rightL = new javax.swing.JLabel();
		wrongL = new javax.swing.JLabel();
		correctAnsP = new javax.swing.JScrollPane();
		correctAnsTxt = new javax.swing.JTextArea();
		wrongAnsP = new javax.swing.JScrollPane();
		wrongAnsTxt = new javax.swing.JTextArea();
		correctAudio = new javax.swing.JCheckBox();
		wrongAudio = new javax.swing.JCheckBox();
		finishB = new javax.swing.JButton();
		textPan = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		ttsP = new javax.swing.JScrollPane();
		ttsTxt = new javax.swing.JTextArea();
		insertB = new javax.swing.JButton();
		recordB = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		bg.setBackground(new java.awt.Color(1, 22, 56));

		listHolder.setBackground(new java.awt.Color(54, 65, 85));
		listHolder.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

		display.setBackground(new java.awt.Color(205, 205, 205));
		display.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
		display.setFont(new java.awt.Font("Tahoma", 0, 28)); // NOI18N
		display.setForeground(new java.awt.Color(70, 70, 85));
		display.setSelectionBackground(new java.awt.Color(135, 206, 250));
		// display.setSelectionForeground(new java.awt.Color(135, 206, 250));
		displayP.setViewportView(display);
		display.addListSelectionListener(new ListSelectionListener() {

			@Override
			public void valueChanged(ListSelectionEvent arg0) {
				if (!arg0.getValueIsAdjusting()) {
					editDelEnable(true);
				} else {
					editDelEnable(false);
				}
			}

			public void editDelEnable(boolean bol) {
				if (bol) {
					editB.setEnabled(true);
					deleteB.setEnabled(true);
				} else {
					editB.setEnabled(false);
					deleteB.setEnabled(false);
				}

			}
		});

		javax.swing.GroupLayout listHolderLayout = new javax.swing.GroupLayout(listHolder);
		listHolder.setLayout(listHolderLayout);
		listHolderLayout
				.setHorizontalGroup(
						listHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(listHolderLayout.createSequentialGroup().addGap(47, 47, 47)
										.addComponent(displayP, javax.swing.GroupLayout.PREFERRED_SIZE, 539,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addContainerGap(47, Short.MAX_VALUE)));
		listHolderLayout
				.setVerticalGroup(listHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(listHolderLayout.createSequentialGroup().addGap(36, 36, 36).addComponent(displayP,
								javax.swing.GroupLayout.PREFERRED_SIZE, 694, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(36, 36, 36)));

		actionButHolder.setBackground(new java.awt.Color(54, 65, 85));
		actionButHolder.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

		editB.setBackground(new java.awt.Color(205, 205, 205));
		editB.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
		editB.setForeground(new java.awt.Color(70, 70, 85));
		editB.setText("Edit");
		editB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
		editB.setPreferredSize(new java.awt.Dimension(227, 111));
		editB.setEnabled(false);
		editB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				editBActionPerformed(evt);
			}
		});

		deleteB.setBackground(new java.awt.Color(205, 205, 205));
		deleteB.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
		deleteB.setForeground(new java.awt.Color(70, 70, 85));
		deleteB.setText("Delete");
		deleteB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
		deleteB.setPreferredSize(new java.awt.Dimension(227, 111));
		deleteB.setEnabled(false);
		deleteB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				deleteBActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout actionButHolderLayout = new javax.swing.GroupLayout(actionButHolder);
		actionButHolder.setLayout(actionButHolderLayout);
		actionButHolderLayout
				.setHorizontalGroup(actionButHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(actionButHolderLayout.createSequentialGroup()
								.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(editB, javax.swing.GroupLayout.PREFERRED_SIZE, 204,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(48, 48, 48).addComponent(deleteB, javax.swing.GroupLayout.PREFERRED_SIZE, 204,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(101, 101, 101)));
		actionButHolderLayout.setVerticalGroup(actionButHolderLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(actionButHolderLayout.createSequentialGroup().addGap(51, 51, 51)
						.addGroup(actionButHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(editB, javax.swing.GroupLayout.PREFERRED_SIZE, 97,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(deleteB, javax.swing.GroupLayout.PREFERRED_SIZE, 97,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(51, 51, 51)));

		editB.getAccessibleContext()
				.setAccessibleDescription("Click here to edit the current line you have selected above");
		deleteB.getAccessibleContext()
				.setAccessibleDescription("Click here to delete the current line you have selected above");

		exitBHolder.setBackground(new java.awt.Color(54, 65, 85));
		exitBHolder.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

		saveB.setBackground(new java.awt.Color(205, 205, 205));
		saveB.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
		saveB.setForeground(new java.awt.Color(70, 70, 85));
		saveB.setText("Save");
		saveB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
		saveB.setPreferredSize(new java.awt.Dimension(227, 111));
		saveB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				saveBActionPerformed(evt);
			}
		});

		testB.setBackground(new java.awt.Color(205, 205, 205));
		testB.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
		testB.setForeground(new java.awt.Color(70, 70, 85));
		testB.setText("Test");
		testB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
		testB.setPreferredSize(new java.awt.Dimension(227, 111));
		testB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				testBActionPerformed(evt);
			}
		});

		exitB.setBackground(new java.awt.Color(205, 205, 205));
		exitB.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
		exitB.setForeground(new java.awt.Color(70, 70, 85));
		exitB.setText("Exit");
		exitB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
		exitB.setPreferredSize(new java.awt.Dimension(227, 111));
		exitB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				exitBActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout exitBHolderLayout = new javax.swing.GroupLayout(exitBHolder);
		exitBHolder.setLayout(exitBHolderLayout);
		exitBHolderLayout
				.setHorizontalGroup(
						exitBHolderLayout
								.createParallelGroup(
										javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(exitBHolderLayout.createSequentialGroup().addGap(119, 119, 119)
										.addComponent(saveB, javax.swing.GroupLayout.PREFERRED_SIZE, 204,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(141, 141, 141)
										.addComponent(testB, javax.swing.GroupLayout.PREFERRED_SIZE, 204,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(130, 130, 130)
										.addComponent(exitB, javax.swing.GroupLayout.PREFERRED_SIZE, 204,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(150, 150, 150)));
		exitBHolderLayout.setVerticalGroup(exitBHolderLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, exitBHolderLayout.createSequentialGroup()
						.addGap(51, 51, 51)
						.addGroup(exitBHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(saveB, javax.swing.GroupLayout.PREFERRED_SIZE, 97,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(testB, javax.swing.GroupLayout.PREFERRED_SIZE, 97,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(exitB, javax.swing.GroupLayout.PREFERRED_SIZE, 97,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(51, 51, 51)));

		saveB.getAccessibleContext().setAccessibleDescription("Click here to save your progress");
		testB.getAccessibleContext().setAccessibleDescription("Click here to test your work");
		exitB.getAccessibleContext().setAccessibleDescription("Click here to exit project builder");

		questionBuild.setBackground(new java.awt.Color(54, 65, 85));
		questionBuild.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

		qBuildL.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
		qBuildL.setForeground(new java.awt.Color(223, 248, 235));
		qBuildL.setText("Question Builder");

		questionTxtP.setForeground(new java.awt.Color(70, 70, 85));

		questionTxt.setBackground(new java.awt.Color(205, 205, 205));
		questionTxt.setColumns(15);
		questionTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
		questionTxt.setForeground(new java.awt.Color(70, 70, 85));
		questionTxt.setRows(5);
		questionTxtP.setViewportView(questionTxt);
		questionTxt.getAccessibleContext().setAccessibleDescription("Enter the user text here.");

		questionL.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
		questionL.setForeground(new java.awt.Color(223, 248, 235));
		questionL.setText("Enter the question you wish to ask");

		displayL.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
		displayL.setForeground(new java.awt.Color(223, 248, 235));
		displayL.setText("Enter the letter or word to display on the braille cells");

		displayS.setBackground(new java.awt.Color(205, 205, 205));
		displayS.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
		displayS.setForeground(new java.awt.Color(70, 70, 85));
		displayS.setToolTipText("Enter the letters or word that you wish the braille displays");

		buttonL.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
		buttonL.setForeground(new java.awt.Color(223, 248, 235));
		buttonL.setText("Select the button that will contain the right answer");

		correctButton.setFont(new java.awt.Font("Tahoma", 0, 28)); // NOI18N
		correctButton.setForeground(new java.awt.Color(70, 70, 85));
		//String butts = start.getButt();
		int but = getButtons();
		for (int i = 0; i < but; i++) {
			correctButton.addItem(String.valueOf(i + 1));
		}

		rightL.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
		rightL.setForeground(new java.awt.Color(223, 248, 235));
		rightL.setText("Enter text for a correct answer");

		wrongL.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
		wrongL.setForeground(new java.awt.Color(223, 248, 235));
		wrongL.setText("Enter text for an incorrect answer");

		correctAnsP.setForeground(new java.awt.Color(70, 70, 85));

		correctAnsTxt.setBackground(new java.awt.Color(205, 205, 205));
		correctAnsTxt.setColumns(15);
		correctAnsTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
		correctAnsTxt.setForeground(new java.awt.Color(70, 70, 85));
		correctAnsTxt.setRows(5);
		correctAnsP.setViewportView(correctAnsTxt);
		correctAnsTxt.getAccessibleContext().setAccessibleDescription("Enter correct text here");

		wrongAnsP.setForeground(new java.awt.Color(70, 70, 85));

		wrongAnsTxt.setBackground(new java.awt.Color(205, 205, 205));
		wrongAnsTxt.setColumns(15);
		wrongAnsTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
		wrongAnsTxt.setForeground(new java.awt.Color(70, 70, 85));
		wrongAnsTxt.setRows(5);
		wrongAnsP.setViewportView(wrongAnsTxt);
		wrongAnsTxt.getAccessibleContext().setAccessibleDescription("");

		correctAudio.setBackground(new java.awt.Color(54, 65, 85));
		correctAudio.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
		correctAudio.setForeground(new java.awt.Color(223, 248, 235));
		correctAudio.setText("Add Audio");

		wrongAudio.setBackground(new java.awt.Color(54, 65, 85));
		wrongAudio.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
		wrongAudio.setForeground(new java.awt.Color(223, 248, 235));
		wrongAudio.setText("Add Audio");

		finishB.setBackground(new java.awt.Color(205, 205, 205));
		finishB.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
		finishB.setForeground(new java.awt.Color(70, 70, 85));
		finishB.setText("Finish");
		finishB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
		finishB.setPreferredSize(new java.awt.Dimension(227, 111));
		finishB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				finishBActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout questionBuildLayout = new javax.swing.GroupLayout(questionBuild);
		questionBuild.setLayout(questionBuildLayout);
		questionBuildLayout.setHorizontalGroup(questionBuildLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(questionBuildLayout.createSequentialGroup().addGroup(questionBuildLayout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(questionBuildLayout.createSequentialGroup().addContainerGap().addComponent(qBuildL))
						.addGroup(questionBuildLayout.createSequentialGroup().addGap(59, 59, 59).addComponent(questionL)
								.addGap(55, 55, 55).addComponent(questionTxtP, javax.swing.GroupLayout.PREFERRED_SIZE,
										302, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGroup(questionBuildLayout.createSequentialGroup().addGap(67, 67, 67)
								.addGroup(questionBuildLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(questionBuildLayout.createSequentialGroup().addComponent(displayL)
												.addGap(69, 69, 69).addComponent(displayS,
														javax.swing.GroupLayout.PREFERRED_SIZE, 210,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(questionBuildLayout.createSequentialGroup()
												.addGroup(questionBuildLayout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(rightL).addComponent(wrongL))
												.addGap(46, 46, 46)
												.addGroup(questionBuildLayout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(correctAnsP,
																javax.swing.GroupLayout.PREFERRED_SIZE, 302,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(wrongAnsP, javax.swing.GroupLayout.PREFERRED_SIZE,
																302, javax.swing.GroupLayout.PREFERRED_SIZE))
												.addGap(30, 30, 30)
												.addGroup(questionBuildLayout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(correctAudio,
																javax.swing.GroupLayout.PREFERRED_SIZE, 173,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(wrongAudio)))
										.addGroup(questionBuildLayout.createSequentialGroup().addComponent(buttonL)
												.addGap(53, 53, 53).addComponent(correctButton,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))))
						.addGroup(questionBuildLayout.createSequentialGroup().addGap(128, 128, 128).addComponent(
								finishB, javax.swing.GroupLayout.PREFERRED_SIZE, 204,
								javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addContainerGap(244, Short.MAX_VALUE)));
		questionBuildLayout.setVerticalGroup(questionBuildLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(questionBuildLayout.createSequentialGroup().addGroup(questionBuildLayout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(questionBuildLayout.createSequentialGroup().addGap(12, 12, 12).addComponent(qBuildL)
								.addGap(50, 50, 50).addComponent(questionL).addGap(89, 89, 89))
						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, questionBuildLayout
								.createSequentialGroup().addContainerGap()
								.addComponent(questionTxtP, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(35, 35, 35)))
						.addGroup(questionBuildLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(displayL).addComponent(displayS, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
						.addGroup(questionBuildLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(buttonL).addComponent(correctButton,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGroup(questionBuildLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(questionBuildLayout.createSequentialGroup().addGroup(questionBuildLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(questionBuildLayout.createSequentialGroup().addGap(58, 58, 58)
												.addComponent(correctAnsP, javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(questionBuildLayout.createSequentialGroup().addGap(111, 111, 111)
												.addComponent(rightL)))
										.addGap(75, 75, 75))
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
										questionBuildLayout.createSequentialGroup()
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(correctAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 58,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(95, 95, 95)))
						.addGroup(questionBuildLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(questionBuildLayout.createSequentialGroup()
										.addGroup(questionBuildLayout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(questionBuildLayout.createSequentialGroup().addGap(39, 39, 39)
														.addComponent(wrongL))
												.addGroup(questionBuildLayout.createSequentialGroup().addGap(42, 42, 42)
														.addComponent(wrongAudio)))
										.addGap(44, 44, 44).addComponent(finishB,
												javax.swing.GroupLayout.PREFERRED_SIZE, 97,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addComponent(wrongAnsP, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addContainerGap()));

		qBuildL.getAccessibleContext().setAccessibleDescription("");
		questionL.getAccessibleContext()
				.setAccessibleDescription("Enter the question you wish to be read to the user.");
		displayL.getAccessibleContext().setAccessibleDescription(
				"Enter the word or letters you wish to display to the user. Please note that it will only display the number of letters that will fit on the amount of cells you selected.");
		buttonL.getAccessibleContext().setAccessibleDescription(
				"The drop box next to here will allow you to to select the item that contains the answer");
		rightL.getAccessibleContext().setAccessibleDescription(
				"In the next text area you can enter the text you wish to display when the user gets the question right. There is also an option to add audio next to it");
		wrongL.getAccessibleContext().setAccessibleDescription(
				"In the next text area you can enter the text you wish to display when the user gets the question wrong. There is also an option to add audio next to it");
		correctAudio.getAccessibleContext().setAccessibleDescription("Add correct audio");
		finishB.getAccessibleContext().setAccessibleName("Finish Button");
		finishB.getAccessibleContext().setAccessibleDescription("Click to finish building the question");

		textPan.setBackground(new java.awt.Color(54, 65, 85));
		textPan.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

		jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
		jLabel1.setForeground(new java.awt.Color(223, 248, 235));
		jLabel1.setText("Add Text or Speech");

		ttsP.setForeground(new java.awt.Color(70, 70, 85));

		ttsTxt.setBackground(new java.awt.Color(205, 205, 205));
		ttsTxt.setColumns(15);
		ttsTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
		ttsTxt.setForeground(new java.awt.Color(70, 70, 85));
		ttsTxt.setRows(5);
		ttsP.setViewportView(ttsTxt);
		ttsTxt.getAccessibleContext().setAccessibleDescription("Enter text here you wish to be read out");

		insertB.setBackground(new java.awt.Color(205, 205, 205));
		insertB.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
		insertB.setForeground(new java.awt.Color(70, 70, 85));
		insertB.setText("Insert");
		insertB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
		insertB.setPreferredSize(new java.awt.Dimension(227, 111));
		insertB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				insertBActionPerformed(evt);
			}
		});

		recordB.setBackground(new java.awt.Color(205, 205, 205));
		recordB.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
		recordB.setForeground(new java.awt.Color(70, 70, 85));
		recordB.setText("Add Audio");
		recordB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
		recordB.setPreferredSize(new java.awt.Dimension(227, 111));
		recordB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				recordBActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout textPanLayout = new javax.swing.GroupLayout(textPan);
		textPan.setLayout(textPanLayout);
		textPanLayout
				.setHorizontalGroup(textPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(textPanLayout.createSequentialGroup().addGroup(textPanLayout
								.createParallelGroup(
										javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(textPanLayout.createSequentialGroup().addGap(137, 137, 137)
										.addComponent(ttsP, javax.swing.GroupLayout.PREFERRED_SIZE, 302,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(59, 59, 59)
										.addComponent(insertB, javax.swing.GroupLayout.PREFERRED_SIZE, 204,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(35, 35, 35).addComponent(recordB,
												javax.swing.GroupLayout.PREFERRED_SIZE, 261,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGroup(
										textPanLayout.createSequentialGroup().addContainerGap().addComponent(jLabel1)))
								.addContainerGap(56, Short.MAX_VALUE)));
		textPanLayout.setVerticalGroup(textPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(textPanLayout.createSequentialGroup().addGap(12, 12, 12).addComponent(jLabel1)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(textPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(ttsP, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGroup(textPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(insertB, javax.swing.GroupLayout.PREFERRED_SIZE, 97,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(recordB, javax.swing.GroupLayout.PREFERRED_SIZE, 97,
												javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		insertB.getAccessibleContext().setAccessibleName("Insert Button");
		insertB.getAccessibleContext().setAccessibleDescription("Click here to insert the text you added");
		recordB.getAccessibleContext()
				.setAccessibleDescription("Click here to open a window where you can record audio");

		javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
		bg.setLayout(bgLayout);
		bgLayout.setHorizontalGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(bgLayout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(bgLayout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgLayout.createSequentialGroup()
								.addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(questionBuild, javax.swing.GroupLayout.Alignment.TRAILING,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(textPan, javax.swing.GroupLayout.Alignment.TRAILING,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(
										bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
												.addComponent(actionButHolder, javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(listHolder, javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
								.addContainerGap())
						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgLayout.createSequentialGroup()
								.addComponent(exitBHolder, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(320, 320, 320)))));
		bgLayout.setVerticalGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(bgLayout.createSequentialGroup().addContainerGap()
						.addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(listHolder, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(questionBuild, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(textPan, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(actionButHolder, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(exitBHolder, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap()));

		questionBuild.getAccessibleContext().setAccessibleName("QuestionBuilder");
		questionBuild.getAccessibleContext().setAccessibleDescription(
				"This area is the question builder. Here you can start by entering the text you wish to display or be heard in the first box below. Then you will enter what word or letters you wish to display on the braille cells. After this there is a drop box undernearth that allows you to select which button has the correct answer in it. There are two more text boxes below this that you will enter what you want to be said for a correcr and incorrect answer. You can also click a check box next to this that will ask if you want to include default audio. After this you click the finish button and the app will do the rest and add it to the file.");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(bg,
				javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout
						.createSequentialGroup().addComponent(bg, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(0, 0, Short.MAX_VALUE)));

		pack();

		finishB.setMnemonic(KeyEvent.VK_F); // Alt + F to exit
		saveB.setMnemonic(KeyEvent.VK_S); // Alt + F to exit
	}// </editor-fold>

	// handles all display events
	public void display(String string) {
		model.addElement(string);
		editor.add(string);
	}

	public void displayBut(int but, boolean correctAns) {
		if (correctAns) {

			model.addElement("Answer set to: " + but);
			but = but - 1;
			editor.add("Answer set to: " + but);

		} else {
			// model.addElement("Wrong Answer set to: " + but + " Button");
			but = but - 1;
			editor.add("WrongA set to: " + but);
		}

	}

	public int getButtons() {
		return this.buttons;
	}

	public void setButtons(int but) {
		this.buttons = but;
	}
	
	public int getCells() {
		return this.cells;
	}
	
	private void setCells(int cells) {
		this.cells = cells;
		
	}
	
	public void getCells(int cells) {
		this.cells = cells;
	}
	private void fileChooser() {
		chooser = new JFileChooser();
		FileNameExtensionFilter filter = new FileNameExtensionFilter("mp3", "wav");
		chooser.setFileFilter(filter);
		chooser.setAcceptAllFileFilterUsed(false);
	}

	private void recordBActionPerformed(java.awt.event.ActionEvent evt) {

		String close[] = { "Add Exisiting Audio", "Create new", "Cancel" };
		int selection = JOptionPane.showOptionDialog(null, "Audio Select", "Audio Select", JOptionPane.WARNING_MESSAGE,
				0, null, close, close[2]);

		// System.out.println(selection);

		if (selection == 0) {
			fileChooser();
			File audioF = null;
			int rep = chooser.showOpenDialog(getContentPane());
			if (rep == JFileChooser.APPROVE_OPTION) {
				audioF = chooser.getSelectedFile();
			}
			String audioName = audioF.getName();
			model.addElement("Playing Audio: " + audioName);
			editor.add("Playing sound: " + audioName);
		} else if (selection == 1) {
			AudioRecorder ap = new AudioRecorder(editor);
			ap.setVisible(true);

		} else {

		}

	}

	// when edit is pressed
	private void editBActionPerformed(java.awt.event.ActionEvent evt) {
		int index = display.getSelectedIndex();
		String whatIsIt = model.getElementAt(index);
		// System.out.println(whatIsIt);

		if (whatIsIt.substring(0, 7).equals("Cells: ")) {
			String newCell = JOptionPane.showInputDialog("Enter the new Cell Value");
			editor.edit(index, "Cells " + newCell);
			model.setElementAt("Cells: " + newCell, index);
		} else if (whatIsIt.substring(0, 9).equals("Buttons: ")) {
			String newBut = JOptionPane.showInputDialog("Enter the new Button Value");
			editor.edit(index, "Buttons " + newBut);
			model.setElementAt("Buttons: " + newBut, index);

			// update button list
			int but = Integer.parseInt(newBut);
			setButtons(but);
			for (int i = 0; i < but; i++) {
				correctButton.setSelectedItem(i);
				int cbValue = correctButton.getSelectedIndex();
				if (cbValue == i) {

				} else {
					correctButton.addItem(String.valueOf(i + 1));
				}

			}
		} else if (whatIsIt.substring(0, 10).equals("Question: ")) {
			String newQ = JOptionPane.showInputDialog("Enter the text for the new Question");
			editor.edit(index, "TTS: " + newQ);
			model.setElementAt("TTS: " + newQ, index);
		} else if (whatIsIt.substring(0, 13).equals("Reading out: ")) {
			String newTTS = JOptionPane.showInputDialog("Enter the text to be read");
			editor.edit(index, "TTS: " + newTTS);
			model.setElementAt("TTS: " + newTTS, index);
		} else if (whatIsIt.substring(0, 15).equals("Answer set to: ")) {

			// int but = Integer.parseInt(start.getButt());
			int but = getButtons();
			String[] options = new String[but];
			for (int i = 0; i < but; i++) {
				options[i] = Integer.toString(i + 1);
				// System.out.println(options[i]);
			}
			String[] close = { "Close", "Done" };
			JComboBox<String> combo = new JComboBox<>(options);
			int selection = JOptionPane.showOptionDialog(null, combo, "Select", JOptionPane.DEFAULT_OPTION,
					JOptionPane.PLAIN_MESSAGE, null, close, close[1]);
			// System.out.println(selection);

			if (selection > 0) {
				// System.out.println(options[selection]);
				editor.edit(index, "Answer set to: " + options[selection]);
				model.setElementAt("Answer set to: " + options[selection], index);
			}

		} else if (whatIsIt.substring(0, 19).equals("Right Answer Text: ")) {
			String newRightAns = JOptionPane.showInputDialog("Enter the new response for a right answer");
			editor.edit(index, "TTS: " + newRightAns);
			model.setElementAt("Right Answer Text: " + newRightAns, index);
		} else if (whatIsIt.substring(0, 19).equals("Wrong Answer Text: ")) {
			String newWrongAns = JOptionPane.showInputDialog("Enter the new response for a wrong answer");
			editor.edit(index, "TTS: " + newWrongAns);
			model.setElementAt("Wrong Answer Text: " + newWrongAns, index);
		}

	}

	private void deleteBActionPerformed(java.awt.event.ActionEvent evt) {

		int index = display.getSelectedIndex();
		String whatIsThis = model.getElementAt(index);
		if (whatIsThis.substring(0, 7).equals("Cells: ") || whatIsThis.substring(0, 9).equals("Buttons: ")) {
			JOptionPane.showMessageDialog(null, "Can not delete cells or buttons. Consider edit to change value",
					"WARNING", JOptionPane.WARNING_MESSAGE);
		} else {
			editor.delete(index);
			model.removeElementAt(index);
		}

	}

	private void insertBActionPerformed(java.awt.event.ActionEvent evt) {

		if (!ttsTxt.getText().isEmpty()) {
			String ttsText = ttsTxt.getText();
			model.addElement("Reading out: " + ttsText);
			editor.add("TTS: " + ttsText);
			ttsTxt.setText("");

		}

	}

	private void valueChanged(ListSelectionEvent e) {

	}

	private void finishBActionPerformed(java.awt.event.ActionEvent evt) {
		String questionText = questionTxt.getText();
		String dispWord = displayS.getText();
		String buttonAns = String.valueOf(correctButton.getSelectedItem());
		int rightBut = Integer.parseInt(buttonAns);
		String correctText = correctAnsTxt.getText();
		boolean addCorrectAudio = correctAudio.isSelected();
		String wrongText = wrongAnsTxt.getText();
		boolean addWrongAudio = wrongAudio.isSelected();

		if (!questionTxt.getText().isEmpty()) {
			model.addElement("Question: " + questionText);
			editor.add("TTS: " + questionText);

		}

		if (!displayS.getText().isEmpty()) {
			model.addElement("Setting the display to: " + dispWord);
			editor.add("Displaying the string " + dispWord);
			String butts = start.getButt();
			int but = Integer.parseInt(butts);
			for (int i = 1; i <= but; i++) {
				if (i == rightBut) {
					displayBut(i, true);
				} else {
					displayBut(i, false);
				}
			}
			editor.add("Insert /~user-input");
		} else {
			JOptionPane.showMessageDialog(null, "Need to display something for a question", "WARNING",
					JOptionPane.WARNING_MESSAGE);
		}

		if (!correctAnsTxt.getText().isEmpty()) {
			editor.add("Insert /~ONEE");
			if (addCorrectAudio == true) {
				model.addElement("Playing correct sound");
				editor.add("Playing sound: correct.wav");
			}
			model.addElement("Right Answer Text: " + correctText);
			editor.add("TTS: " + correctText);
			editor.add("Insert /~skip:NEXT");
		}

		if (!wrongAnsTxt.getText().isEmpty()) {
			editor.add("Insert /~TWOO");
			if (addWrongAudio == true) {
				model.addElement("Playing wrong sound");
				editor.add("Playing sound: wrong.wav");
			}

			model.addElement("Wrong Answer Text: " + wrongText);
			editor.add("TTS: " + wrongText);
			editor.add("Insert /~skip:NEXT");
		}
		editor.add("TTS:  ");
		editor.add("Insert /~NEXT");
		questionTxt.setText("");
		displayS.setText("");
		correctAnsTxt.setText("");
		correctAudio.setSelected(false);
		wrongAnsTxt.setText("");
		wrongAudio.setSelected(false);

	}

	// Saves the work onto the file using editor class
	private void saveBActionPerformed(java.awt.event.ActionEvent evt) {
		editor.parseToFileFormat();
		editor.save();
	}

	// Event for test button...Tests the file currently being worked on
	private void testBActionPerformed(java.awt.event.ActionEvent evt) {
		String filepath = file.getAbsolutePath();
		ScenarioParser sp = new ScenarioParser(true);
		sp.setScenarioFile(filepath);
	}

	// Event for action button, asks if saved if not closes frame if yes returns
	// back to builder.
	private void exitBActionPerformed(java.awt.event.ActionEvent evt) {
		int closeFrame = 0;
		String[] buttons = { "Yes", "No" };
		int returnValue = JOptionPane.showOptionDialog(null, "Your file will not save. Do you wish to continue?",
				"Exit", JOptionPane.WARNING_MESSAGE, 0, null, buttons, buttons[1]);

		if (returnValue == 0) {
			closeFrame = 1;
		} else if (returnValue == 1) {
			// does nothing
		}
		if (closeFrame == 1) {
			dispose();
		}

	}

	// Use this class to easliy add listeners to elements
	@Override
	public void actionPerformed(ActionEvent arg0) {
		// TODO Auto-generated method stub

	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(scenarioBuild.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(scenarioBuild.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(scenarioBuild.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(scenarioBuild.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {

				// scenarioBuild().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify
	private DefaultListModel<Integer> dataModel = new DefaultListModel<>();
	private DefaultListModel<String> model = new DefaultListModel<>();
	private javax.swing.JPanel actionButHolder;
	private javax.swing.JPanel bg;
	private javax.swing.JLabel buttonL;
	private javax.swing.JScrollPane correctAnsP;
	private javax.swing.JTextArea correctAnsTxt;
	private javax.swing.JCheckBox correctAudio;
	private javax.swing.JComboBox<String> correctButton;
	private javax.swing.JButton deleteB;
	private javax.swing.JList<String> display;
	private javax.swing.JLabel displayL;
	private javax.swing.JScrollPane displayP;
	private javax.swing.JTextField displayS;
	private javax.swing.JButton editB;
	private javax.swing.JButton exitB;
	private javax.swing.JPanel exitBHolder;
	private javax.swing.JButton finishB;
	private javax.swing.JButton insertB;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JPanel listHolder;
	private javax.swing.JLabel qBuildL;
	private javax.swing.JPanel questionBuild;
	private javax.swing.JLabel questionL;
	private javax.swing.JTextArea questionTxt;
	private javax.swing.JScrollPane questionTxtP;
	private javax.swing.JButton recordB;
	private javax.swing.JLabel rightL;
	private javax.swing.JButton saveB;
	private javax.swing.JButton testB;
	private javax.swing.JPanel textPan;
	private javax.swing.JScrollPane ttsP;
	private javax.swing.JTextArea ttsTxt;
	private javax.swing.JScrollPane wrongAnsP;
	private javax.swing.JTextArea wrongAnsTxt;
	private javax.swing.JCheckBox wrongAudio;
	private javax.swing.JLabel wrongL;
	// End of variables declaration

}