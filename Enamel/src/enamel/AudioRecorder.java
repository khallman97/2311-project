/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package enamel;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.File;
import java.io.IOException;
import java.util.Date;

import javax.sound.sampled.AudioFileFormat;
import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.DataLine;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.TargetDataLine;
import javax.swing.JOptionPane;

/**
 *
 * @author kyleh
 */
public class AudioRecorder extends javax.swing.JFrame {

    /**
     * Creates new form AudioRecorder
     */
	
	Editor edit;
    public AudioRecorder(Editor edit) {
        initComponents();
        this.edit = edit;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        bg = new javax.swing.JPanel();
        buttonP = new javax.swing.JPanel();
        recordStartB = new javax.swing.JButton();
        recordStopB = new javax.swing.JButton();
        exitB = new javax.swing.JButton();
        infoP = new javax.swing.JPanel();
        exitT = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bg.setBackground(new java.awt.Color(1, 22, 56));

        buttonP.setBackground(new java.awt.Color(54, 65, 85));

        recordStartB.setBackground(new java.awt.Color(205, 205, 205));
        recordStartB.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        recordStartB.setForeground(new java.awt.Color(70, 70, 85));
        recordStartB.setText("Start Recording");
        recordStartB.setToolTipText("");
        recordStartB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				recordStartBActionPerformed(evt);
			}
		});

        recordStopB.setBackground(new java.awt.Color(205, 205, 205));
        recordStopB.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        recordStopB.setForeground(new java.awt.Color(70, 70, 85));
        recordStopB.setText("Stop Recording");
        recordStopB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				recordStopBActionPerformed(evt);
			}
		});

        exitB.setBackground(new java.awt.Color(205, 205, 205));
        exitB.setFont(new java.awt.Font("Tahoma", 1, 28)); // NOI18N
        exitB.setForeground(new java.awt.Color(70, 70, 85));
        exitB.setText("Exit");
        exitB.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				exitBActionPerformed(evt);
			}
		});

        javax.swing.GroupLayout buttonPLayout = new javax.swing.GroupLayout(buttonP);
        buttonP.setLayout(buttonPLayout);
        buttonPLayout.setHorizontalGroup(
            buttonPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(recordStartB)
                .addGap(107, 107, 107)
                .addComponent(recordStopB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                .addComponent(exitB, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        buttonPLayout.setVerticalGroup(
            buttonPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPLayout.createSequentialGroup()
                .addContainerGap(84, Short.MAX_VALUE)
                .addGroup(buttonPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recordStartB, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recordStopB, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exitB, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(82, 82, 82))
        );

        recordStartB.getAccessibleContext().setAccessibleDescription("Click to start recording Audio");
        recordStopB.getAccessibleContext().setAccessibleDescription("Click to stop recording Audio");
        exitB.getAccessibleContext().setAccessibleDescription("Exit and add the file to the project");

        infoP.setBackground(new java.awt.Color(54, 65, 85));

        exitT.setEditable(false);
        exitT.setBackground(new java.awt.Color(205, 205, 205));
       

        javax.swing.GroupLayout infoPLayout = new javax.swing.GroupLayout(infoP);
        infoP.setLayout(infoPLayout);
        infoPLayout.setHorizontalGroup(
            infoPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoPLayout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(exitT, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        infoPLayout.setVerticalGroup(
            infoPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exitT, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(buttonP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(249, 249, 249)
                        .addComponent(infoP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(infoP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(buttonP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>   
    
    /*
     * methods for recording Audio
     */
    
    TargetDataLine line;
    AudioFormat a = new AudioFormat(16000, 8, 2, true, true);
    
    public void start() {
        try {
           DataLine.Info info = new DataLine.Info(TargetDataLine.class, a);
           line = (TargetDataLine) AudioSystem.getLine(info);
           line.open(a);
           line.start();
           AudioInputStream ais = new AudioInputStream(line);
           String newFile = JOptionPane.showInputDialog("Enter the new Name of the file");
           AudioSystem.write(ais, AudioFileFormat.Type.WAVE,
                 new File(System.getProperty("user.dir")+"/AudioFiles/"+newFile+ ".wav"));
        } catch (Exception e) {
           e.printStackTrace();
        }
     }
    
    public void stop() {
    	line.stop();
        line.close();
        exitT.setText("Finished");
    }
   public void record() {
		      Thread stopper = new Thread(new Runnable() {
		         public void run() {
		            try {
		               Thread.sleep(Integer.parseInt(JOptionPane
		                     .showInputDialog("How long do you want to record (seconds)")) * 1000);
		            } catch (InterruptedException ex) {
		               ex.printStackTrace();
		            }
		            line.stop();
		            line.close();
		            exitT.setText("Finished");
		            JOptionPane.showMessageDialog(null, "Finished.");
		         }
		      });
		      stopper.start();
		      start();
		   
   }
   
    

    
    /*
     * Action events
     */
    
    //Record start
    private void recordStartBActionPerformed(java.awt.event.ActionEvent evt) {
    	
    	record();
    }
    	
    	
 
    //Record Stop
    private void recordStopBActionPerformed(java.awt.event.ActionEvent evt) {
    	stop();
    }
    
    //Exit
    private void exitBActionPerformed(java.awt.event.ActionEvent evt) {                                      
        
    }                                     
    
  
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AudioRecorder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AudioRecorder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AudioRecorder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AudioRecorder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new AudioRecorder(Editor edit).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JPanel bg;
    private javax.swing.JPanel buttonP;
    private javax.swing.JButton exitB;
    private javax.swing.JTextField exitT;
    private javax.swing.JPanel infoP;
    private javax.swing.JButton recordStartB;
    private javax.swing.JButton recordStopB;
    // End of variables declaration                   
}
